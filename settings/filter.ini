[Handlers]
# These are handlers for the content class datatypes which allows for dynamic attribute names to be used
# The content class attribute is looked up and the first handler to support the data-type will
# be used for creating joins and the filter.
# The handlers are search in reverse-order, this makes it easy to just append to this array
# and have the last entry have precedence.
DataTypeHandlers[]
# Handlers for all other datatypes, assumes that the value is stored in sort_key_string or sort_key_int
DataTypeHandlers[]=Aplia\Content\Filter\Types\RegularType

# Mapping from data-type string to a handler, faster lookup for handler that support
# specific types
DataTypeMap[]
# Handlers for ezselection, filters on data_text concatted list
DataTypeMap[ezselection]=Aplia\Content\Filter\Types\SelectionType
# Handlers for objectrelation and objectrelation list, joins with the relation table
DataTypeMap[ezobjectrelation]=Aplia\Content\Filter\Types\RelationType
DataTypeMap[ezobjectrelationlist]=Aplia\Content\Filter\Types\RelationType
# Handlers for eztags (extension)
DataTypeMap[eztags]=Aplia\Content\Filter\Types\TagsType

# Modifiers are simple callbacks which can wrap SQL functions around the fields or values
# The callback is specified as a static function call, with the class name + :: + function name.
Modifiers[]
# Applies the DATE() function around the filter item
Modifiers[date]=Aplia\Content\Filter\NestedFilter::dateFilter

# Custom attribute support, this maps a specific attribute name to a filter handler for that attribute
Attributes[]

# These are all the same attributes as the ones supported by the regular attribute filter on eZContentObjectTreeNode
Attributes[path]=Aplia\Content\Filter\ObjectFilter
Attributes[published]=Aplia\Content\Filter\ObjectFilter
Attributes[modified]=Aplia\Content\Filter\ObjectFilter
Attributes[modified_subnode]=Aplia\Content\Filter\ObjectFilter
Attributes[node_id]=Aplia\Content\Filter\ObjectFilter
Attributes[contentobject_id]=Aplia\Content\Filter\ObjectFilter
Attributes[section]=Aplia\Content\Filter\ObjectFilter
Attributes[state]=Aplia\Content\Filter\ObjectFilter
Attributes[depth]=Aplia\Content\Filter\ObjectFilter
Attributes[class_identifier]=Aplia\Content\Filter\ObjectFilter
Attributes[class_name]=Aplia\Content\Filter\ObjectFilter
Attributes[priority]=Aplia\Content\Filter\ObjectFilter
Attributes[name]=Aplia\Content\Filter\ObjectFilter
Attributes[owner]=Aplia\Content\Filter\ObjectFilter
Attributes[visibility]=Aplia\Content\Filter\ObjectFilter

# This filters on the path based on a node ID,
# for instance to exclude nodes under a specific sub-tree use:
# ['path_element:!=', 42]
Attributes[path_element]=Aplia\Content\Filter\ObjectFilter
